# Generated by Django 3.2.13 on 2022-05-25 21:28

import SparkApp.modelsBo.ModelsUtilitaires.TransactionClass
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('accountId', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Administrateur',
            fields=[
                ('administrateurId', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Adresse',
            fields=[
                ('ID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('n_indic', models.CharField(max_length=255)),
                ('no_rue', models.IntegerField()),
                ('nom_rue', models.CharField(max_length=255)),
                ('code_postal', models.CharField(max_length=255)),
                ('ville', models.CharField(max_length=255)),
                ('province', models.CharField(max_length=255)),
                ('pays', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='AlbumPhoto',
            fields=[
                ('AlbumPhotoID', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Auteur',
            fields=[
                ('AuteurId', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Authentification',
            fields=[
                ('userId', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('motdepasse', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Barcode',
            fields=[
                ('barcodeID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Calendrier',
            fields=[
                ('calendrierID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='CentreInteret',
            fields=[
                ('centreInteretId', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Club',
            fields=[
                ('ClubId', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='CodeQR',
            fields=[
                ('codeQRID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='ConfigurationCommerciale',
            fields=[
                ('configurationCommercialeID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='ConfigurationGroupe',
            fields=[
                ('configurationGroupeID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='ConfigurationProfil',
            fields=[
                ('configurationProfilID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='ConfigurationUI',
            fields=[
                ('configurationUI_ID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Ecole',
            fields=[
                ('EcoleID', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='EntreprisePublicitaire',
            fields=[
                ('EPPId', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Equipe',
            fields=[
                ('EquipeId', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='GeoCoordinates',
            fields=[
                ('GeoCoordinatesID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('groupID', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='GroupeDeCommunication',
            fields=[
                ('groupeDeCommunicationId', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='HashWords',
            fields=[
                ('hashWordsID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Invitation',
            fields=[
                ('invitationID', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Joueur',
            fields=[
                ('JoueurId', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Magasin',
            fields=[
                ('MagasinId', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='MediaVideo',
            fields=[
                ('videoID', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='OrganisateurEve',
            fields=[
                ('OrganisateurEveId', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('paymentID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Produit',
            fields=[
                ('produitId', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=100)),
                ('prix', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Profil',
            fields=[
                ('ProfilId', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('ProfilName', models.CharField(max_length=100)),
                ('Department', models.CharField(max_length=100)),
                ('DateOfJoining', models.DateField()),
                ('PhotoProfilFileName', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Publications',
            fields=[
                ('ID', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Publicite',
            fields=[
                ('publiciteID', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Relation',
            fields=[
                ('relationID', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Reseau',
            fields=[
                ('ReseauId', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Souscription',
            fields=[
                ('SouscriptionID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Sport',
            fields=[
                ('sportID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Telephone',
            fields=[
                ('ID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('numero', models.CharField(max_length=255)),
                ('type_de_numero', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('transactionID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_Status', models.CharField(choices=[(SparkApp.modelsBo.ModelsUtilitaires.TransactionClass.StatusSubClass['RS'], 'Request sent'), (SparkApp.modelsBo.ModelsUtilitaires.TransactionClass.StatusSubClass['P'], 'Pending'), (SparkApp.modelsBo.ModelsUtilitaires.TransactionClass.StatusSubClass['Err'], 'Error'), (SparkApp.modelsBo.ModelsUtilitaires.TransactionClass.StatusSubClass['C'], 'Completed'), (SparkApp.modelsBo.ModelsUtilitaires.TransactionClass.StatusSubClass['Can'], 'Cancelled')], max_length=4)),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('videoID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='SparkUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('sparkuserID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Configuration',
            fields=[
                ('ID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('configurationCommerciale_fk', models.ForeignKey(default=None, on_delete=django.db.models.deletion.SET_DEFAULT, to='SparkApp.configurationcommerciale')),
                ('configurationGroupe_fk', models.ForeignKey(default=None, on_delete=django.db.models.deletion.SET_DEFAULT, to='SparkApp.configurationgroupe')),
                ('configurationProfil_fk', models.ForeignKey(default=None, on_delete=django.db.models.deletion.SET_DEFAULT, to='SparkApp.configurationprofil')),
                ('configurationUI_fk', models.ForeignKey(default=None, on_delete=django.db.models.deletion.SET_DEFAULT, to='SparkApp.configurationui')),
            ],
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('articleID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auteur_fk', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='SparkApp.auteur')),
            ],
        ),
    ]
